# Copyright 2014 Jeffrey Kegler
# This file is part of Libmarpa.  Libmarpa is free software: you can
# redistribute it and/or modify it under the terms of the GNU Lesser
# General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# Libmarpa is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser
# General Public License along with Libmarpa.  If not, see
# http://www.gnu.org/licenses/.

This is an autotools-built distribution, and is built and installed
as described in the autotools documents.  The INSTALL file in this
directory is the standard autotools INSTALL file, unaltered.  The rest
of this document contains some notes that supplement it.

TAGS
====

Libmarpa allows you to specify a "tag" at configure time.  This is
compiled into the Libmarpa library and can be used to identify it.
The archetypal use case is testing -- the tag is a convenent way to
ensure that you are testing with the library that you think you are
testing with.  By default, if you compile with GCC, the tag is a time
stamp, recording when the preprocessor was run.  You can also set the
tag explicitly:

    ./configure MARPA_DEBUG_FLAG=-DMARPA_TAG=testing123

The standard Marpa::R2 test suite prints the tag early in its test output:

    t/00-load.t ............ 1/4 # Marpa::R2 version is 2.085_004 #
    Libmarpa version is 6.0.3 # Libmarpa tag: testing123

You can put spaces and other non-word characters into the tag, but
you have to figure out how to make them run the guantlet from shell to
Makefile to compiler command line.  Here's an example who works on Linux:

    ./configure MARPA_DEBUG_FLAG="\"-DMARPA_TAG=*This is a test*\""
